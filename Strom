import java.io.IOException;
import java.io.PrintWriter;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.awt.*;

import net.jmge.gif.Gif89Encoder;
@WebServlet("/GroupStuff")
public class groupproject extends HttpServlet {
	private static final long serialVersionUID = 1L;


	public groupproject() {
		super();
	}


	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		if (request.getParameter("c1")==null){
			response.setContentType("text/html");
			PrintWriter out = response.getWriter();
			out.println("<form>");
			out.println("Weather <input name='c1' value='FF0000'/><br>");
			out.println("Background's Colour: <input name='c1' value='FF00FF'/><br>");
			out.println("<input type='submit'/>");
			out.println("</form>");
		}else{
			response.setContentType("image/gif");
			BufferedImage image = new BufferedImage(150, 200, BufferedImage.TYPE_INT_ARGB);
			Graphics2D g = image.createGraphics();
			g.setRenderingHint(
					RenderingHints.KEY_ANTIALIASING,
					RenderingHints.VALUE_ANTIALIAS_ON);
			doPost(request,response);
			Color c1 = new Color(Integer.parseInt(request.getParameter("c1"),16));
			Color c2 = new Color(Integer.parseInt(request.getParameter("c2"),16));
	    int frame = 30;
		int r = 20;
		Polygon triangle = new Polygon(
				new int[] {10, 20, 30}, new int[] {100, 20, 100}, 3);
				g.setColor(c2);
		g.fillRect(0,0,300,200);
		g.setColor(c1);
		g.translate(75,50);
		g.scale(r/100.0,r/100.0);
		g.rotate(2*frame*Math.PI/20);
		g.fillPolygon(triangle);
		}
	}
	
	void drawFrame(Graphics2D g, int frame){
	
		g.setColor(Color.gray);
		g.fillRect(0, 0, 200, 150);
		
		 for (int i = 0; i < 1;i++){
		 g.translate(5*frame,0*frame);
		 
		  
		  Polygon tri = new Polygon();
		  tri.addPoint(75,10);
		  tri.addPoint(30,70);
		  tri.addPoint(120,70);
		  g.setColor(Color.darkGray);
		  g.fillPolygon(tri);
		
		  Polygon tris = new Polygon();
		  tris.addPoint(100,30);
		  tris.addPoint(75,70);
		  tris.addPoint(125,70);
		  g.setColor(Color.lightGray);
		  g.fillPolygon(tris);
		 }
		 
		  
		
		  new java.util.Timer().schedule(
				  new java.util.TimerTask(){
					  @Override
					  public void run(){
						  
					  
		  Polygon trit = new Polygon();
		  trit.addPoint(75,80);
		  trit.addPoint(55,100);
		  trit.addPoint(75,100);
		  g.setColor(Color.white);
		  g.fillPolygon(trit);
		  
		  Polygon trib = new Polygon();
		  trib.addPoint(65,125);
		  trib.addPoint(65,105);
		  trib.addPoint(85,105);
		  g.setColor(Color.white);
		  g.fillPolygon(trib);
		  
		  g.setColor(Color.white);
		  g.fillRect(55,100,30,5);
					  }
				    
				  },
				  5000);}
		  
			
		
	
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		try {   
			response.setContentType("image/gif");
			BufferedImage image = new BufferedImage(200,200, BufferedImage.TYPE_INT_ARGB);
			Gif89Encoder genc = new Gif89Encoder(); 
			for (int i=0;i<20;i++){ 
				Graphics2D g = image.createGraphics();
				drawFrame(g,i);
				genc.addFrame(image);
				g.dispose();
			}
			genc.setUniformDelay(10);
			genc.setLoopCount(0);
			genc.encode(response.getOutputStream());
		}catch(Exception e){
			System.err.println(e);
		}
	}
}
